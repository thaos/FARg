% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/boxcox.R, R/standardize.R
\name{transform_pnt.bc_fit}
\alias{transform_pnt}
\alias{transform_pnt.bc_fit}
\alias{transform_pnt.std}
\title{Apply a transformation on a new point.}
\usage{
\method{transform_pnt}{bc_fit}(y_trans, pnt, ...)

transform_pnt(y_trans, pnt, ...)

\method{transform_pnt}{std}(y_trans, pnt, ...)
}
\arguments{
\item{y_trans}{an object of class trans.}

\item{pnt}{a line from a data.frame giving the necessary information to perfom the transformation.}

\item{...}{Arguments to be passed to methods,}
}
\value{
returns a vector where the point value has been transformed.
}
\description{
Apply a transformation on a new point.
}
\details{
Apply to a point the same transformation as in the y_trans object.
}
\examples{
data(tas)
t1 <- 2003
t0 <- 1990
xp <- 1.6
pnt1 <- set_pnt(t1, xp, time_var="year", tas)
pnt0 <- set_pnt(t0, xp, time_var="year", tas)
y_std <- standardize(eur_tas, data=tas, mu_mod=~avg_gbl_tas, sig2_mod=~avg_gbl_tas)
y_std_fit <- gpd_fit(y_std$y_std ,  data=tas, time_var="year", qthreshold=0.8)
pnt1_std <- transform_pnt(y_std, pnt1)
pnt0_std <- transform_pnt(y_std, pnt0)
get_far(y_std_fit, pnt0_std, pnt1_std)

eur_tas_positive <- with(tas, eur_tas + abs(min(eur_tas)) +1)
y_bc <- bc_fit(l_lambda=seq(-1, 1, 0.02), y=eur_tas_positive, data=tas, mu_mod=~avg_gbl_tas, sig2_mod=~avg_gbl_tas, time_var="year", to_plot=TRUE)
y_bc_fit <- gpd_fit(y_bc$y_std ,  data=tas, time_var="year", qthreshold=0.8)
pnt1_bc <- transform_pnt(y_bc, pnt1)
pnt0_bc <- transform_pnt(y_bc, pnt0)
get_far(y_bc_fit, pnt0_bc, pnt1_bc, under_threshold=TRUE)
}

