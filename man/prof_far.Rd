% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/prof_far.R
\name{prof_far}
\alias{prof_far}
\title{Compute Confidence Intervals for the FAR using the profile likelihood methodology.}
\usage{
prof_far(y_fit, xp, t0, t1, ci_p = 0.95, to_plot = FALSE, ...)
}
\arguments{
\item{y_fit}{an object of class gauss_fit, gev_fit or gpd_fit.}

\item{xp}{the threshold used to compute the probability of exeeding that threshold.}

\item{t0}{the time t0 to compute the probability of exeeding xp. If the time t0 is not present in dataset used for fitting the model, the closes time of the dataset is used.}

\item{t1}{the time t1 to compute the probability of exeeding xp. If the time t1 is not present in dataset used for fitting the model, the closes time of the dataset is used.}

\item{ci_p}{the confidence level of the confidence intervals (between 0 and 1).}

\item{to_plot}{if TRUE, the function plots the offset profile likelihood. The profile likelihood plot is made in such a way that the FAR value is considered within the confidences intervals if the offset likelihood is above 0.}

\item{...}{Arguments to be passed to methods,}
}
\description{
Compute Confidence Intervals for the FAR based on the profile likelihood methodology and constrained optimization.
}
\details{
The profile likelihood for the  FAR is computed using constrained optimization which allow us to minimize the negative likelihood for a given value of the FAR. The method for the optimization was the Augmented Lagrangian and Adaptive Barrier Minimization Algorithm implemeted in the \code{auglag} function of the alabama package.
}
\examples{
data(tas)

ge_fit <- gev_fit(eur_tas, data=tas, mu_mod=~gbl_tas, sig_mod=~gbl_tas, time_var="year")
gp_fit <- gpd_fit(eur_tas, data=tas, mu_mod=~gbl_tas, sig_mod=~gbl_tas, time_var="year", qthreshold=0.9)
ga_fit <- gauss_fit(eur_tas, data=tas, mu_mod=~gbl_tas, sig_mod=~gbl_tas, time_var="year")

t1 <- 2003
t0 <- 1990
xp <- 1.6

p_gpd <- prof_far(gp_fit, xp, t0, t1, ci_p=0.95 ,to_plot=TRUE)
p_gev <- prof_far(ge_fit, xp, t0, t1, ci_p=0.95 ,to_plot=TRUE)
p_gauss <- prof_far(ga_fit, xp, t0, t1, ci_p=0.95 ,to_plot=TRUE)
}

